// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BansColumns holds the columns for the "bans" table.
	BansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// BansTable holds the schema information for the "bans" table.
	BansTable = &schema.Table{
		Name:       "bans",
		Columns:    BansColumns,
		PrimaryKey: []*schema.Column{BansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "bans_users_ban",
				Columns:    []*schema.Column{BansColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EmailsColumns holds the columns for the "emails" table.
	EmailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "main", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt},
	}
	// EmailsTable holds the schema information for the "emails" table.
	EmailsTable = &schema.Table{
		Name:       "emails",
		Columns:    EmailsColumns,
		PrimaryKey: []*schema.Column{EmailsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "emails_users_emails",
				Columns:    []*schema.Column{EmailsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// FirstLoginsColumns holds the columns for the "first_logins" table.
	FirstLoginsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "successful", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt},
	}
	// FirstLoginsTable holds the schema information for the "first_logins" table.
	FirstLoginsTable = &schema.Table{
		Name:       "first_logins",
		Columns:    FirstLoginsColumns,
		PrimaryKey: []*schema.Column{FirstLoginsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "first_logins_users_first_login",
				Columns:    []*schema.Column{FirstLoginsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LoginAttemptsColumns holds the columns for the "login_attempts" table.
	LoginAttemptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "successful", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt},
	}
	// LoginAttemptsTable holds the schema information for the "login_attempts" table.
	LoginAttemptsTable = &schema.Table{
		Name:       "login_attempts",
		Columns:    LoginAttemptsColumns,
		PrimaryKey: []*schema.Column{LoginAttemptsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "login_attempts_users_login_attempts",
				Columns:    []*schema.Column{LoginAttemptsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PasswordsColumns holds the columns for the "passwords" table.
	PasswordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
	}
	// PasswordsTable holds the schema information for the "passwords" table.
	PasswordsTable = &schema.Table{
		Name:       "passwords",
		Columns:    PasswordsColumns,
		PrimaryKey: []*schema.Column{PasswordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "passwords_users_passwords",
				Columns:    []*schema.Column{PasswordsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "service_id", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "internal_name", Type: field.TypeString, Unique: true},
		{Name: "services_permission", Type: field.TypeInt, Nullable: true},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:       "permissions",
		Columns:    PermissionsColumns,
		PrimaryKey: []*schema.Column{PermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "permissions_services_permission",
				Columns:    []*schema.Column{PermissionsColumns[12]},
				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PhonesColumns holds the columns for the "phones" table.
	PhonesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "phone", Type: field.TypeString},
		{Name: "main", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt},
	}
	// PhonesTable holds the schema information for the "phones" table.
	PhonesTable = &schema.Table{
		Name:       "phones",
		Columns:    PhonesColumns,
		PrimaryKey: []*schema.Column{PhonesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "phones_users_phones",
				Columns:    []*schema.Column{PhonesColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// RoleHasPermissionsColumns holds the columns for the "role_has_permissions" table.
	RoleHasPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "role_id", Type: field.TypeInt},
		{Name: "permission_id", Type: field.TypeInt},
	}
	// RoleHasPermissionsTable holds the schema information for the "role_has_permissions" table.
	RoleHasPermissionsTable = &schema.Table{
		Name:       "role_has_permissions",
		Columns:    RoleHasPermissionsColumns,
		PrimaryKey: []*schema.Column{RoleHasPermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_has_permissions_roles_roles",
				Columns:    []*schema.Column{RoleHasPermissionsColumns[7]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "role_has_permissions_permissions_permissions",
				Columns:    []*schema.Column{RoleHasPermissionsColumns[8]},
				RefColumns: []*schema.Column{PermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolehaspermissions_role_id_permission_id",
				Unique:  true,
				Columns: []*schema.Column{RoleHasPermissionsColumns[7], RoleHasPermissionsColumns[8]},
			},
		},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "surname", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserHasRolesColumns holds the columns for the "user_has_roles" table.
	UserHasRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "updated_by", Type: field.TypeInt},
		{Name: "deleted_by", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "role_id", Type: field.TypeInt},
	}
	// UserHasRolesTable holds the schema information for the "user_has_roles" table.
	UserHasRolesTable = &schema.Table{
		Name:       "user_has_roles",
		Columns:    UserHasRolesColumns,
		PrimaryKey: []*schema.Column{UserHasRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_has_roles_users_users",
				Columns:    []*schema.Column{UserHasRolesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_has_roles_roles_roles",
				Columns:    []*schema.Column{UserHasRolesColumns[8]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userhasroles_user_id_role_id",
				Unique:  true,
				Columns: []*schema.Column{UserHasRolesColumns[7], UserHasRolesColumns[8]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BansTable,
		EmailsTable,
		FirstLoginsTable,
		LoginAttemptsTable,
		PasswordsTable,
		PermissionsTable,
		PhonesTable,
		RolesTable,
		RoleHasPermissionsTable,
		ServicesTable,
		UsersTable,
		UserHasRolesTable,
	}
)

func init() {
	BansTable.ForeignKeys[0].RefTable = UsersTable
	EmailsTable.ForeignKeys[0].RefTable = UsersTable
	FirstLoginsTable.ForeignKeys[0].RefTable = UsersTable
	LoginAttemptsTable.ForeignKeys[0].RefTable = UsersTable
	PasswordsTable.ForeignKeys[0].RefTable = UsersTable
	PermissionsTable.ForeignKeys[0].RefTable = ServicesTable
	PhonesTable.ForeignKeys[0].RefTable = UsersTable
	RoleHasPermissionsTable.ForeignKeys[0].RefTable = RolesTable
	RoleHasPermissionsTable.ForeignKeys[1].RefTable = PermissionsTable
	UserHasRolesTable.ForeignKeys[0].RefTable = UsersTable
	UserHasRolesTable.ForeignKeys[1].RefTable = RolesTable
}
